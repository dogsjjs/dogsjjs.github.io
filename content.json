{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"第一篇hexo博客","slug":"my-first-blog","date":"2020-10-04T02:35:49.000Z","updated":"2020-10-04T02:37:15.562Z","comments":true,"path":"2020/10/04/my-first-blog/","link":"","permalink":"http://example.com/2020/10/04/my-first-blog/","excerpt":"","text":"Thymeleaf自查手册一、快速使用 导入thymeleaf名称空间 1&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt; 使用thymeleaf语法 123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;success&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;成功&lt;/h1&gt; &lt;!--th:text 将div里的文本内容设置为$&#123;&#125;的内容--&gt; &lt;div th:text=&quot;$&#123;hello&#125;&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 语法规则 th:text 改变当前元素的文本内容 th:任意html属性 可替换原生属性 例如 th:class th:id 二、表达式Simple expressions: (表达式语法) Variable Expressions: ${…} 获取变量值 OGNL Selection Variable Expressions: *{…} 选择表达式 Message Expressions: #{…} Link URL Expressions: @{…} Fragment Expressions: ~{…} ${…}详解： 1234567891011121314151617181920212223242526271、获取对象的属性、调用方法2、使用内置的基本对象#ctx : the context object. #vars: the context variables. #locale : the context locale. #request : (only in Web Contexts) the HttpServletRequest object. #response : (only in Web Contexts) the HttpServletResponse object. #session : (only in Web Contexts) the HttpSession object. #servletContext : (only in Web Contexts) the ServletContext object.例子：$&#123;session.foo&#125;3、内置的一些工具对象#execInfo : information about the template being processed. #messages : methods for obtaining externalized messages inside variables expressions, in the same way as they would be obtained using #&#123;…&#125; syntax. #uris : methods for escaping parts of URLs/URIs#conversions : methods for executing the configured conversion service (if any). #dates : methods for java.util.Date objects: formatting, component extraction, etc. #calendars : analogous to #dates , but for java.util.Calendar objects. #numbers : methods for formatting numeric objects. #strings : methods for String objects: contains, startsWith, prepending/appending, etc. #objects : methods for objects in general. #bools : methods for boolean evaluation. #arrays : methods for arrays. #lists : methods for lists. #sets : methods for sets. #maps : methods for maps. #aggregates : methods for creating aggregates on arrays or collections. #ids : methods for dealing with id attributes that might be repeated (for example, as a result of an iteration). *{…}详解： 1234567和$&#123;&#125;在功能上是一样的补充：配合th:object&lt;div th:object=&quot;$&#123;session.user&#125;&quot;&gt; &lt;p&gt;Name: &lt;span th:text=&quot;*&#123;firstName&#125;&quot;&gt;Sebastian&lt;/span&gt;.&lt;/p&gt; &lt;p&gt;Surname: &lt;span th:text=&quot;*&#123;lastName&#125;&quot;&gt;Pepper&lt;/span&gt;.&lt;/p&gt; &lt;p&gt;Nationality: &lt;span th:text=&quot;*&#123;nationality&#125;&quot;&gt;Saturn&lt;/span&gt;.&lt;/p&gt; &lt;/div&gt; #{…} ：用于获取国际化内容 @{…} ：定义url链接的 12345&lt;!-- Will produce &#x27;http://localhost:8080/gtvg/order/details?orderId=3&#x27; (plus rewriting) --&gt; &lt;a href=&quot;details.html&quot; th:href=&quot;@&#123;http://localhost:8080/gtvg/order/details(orderId=$&#123;o.id&#125;)&#125;&quot;&gt;view&lt;/a&gt; &lt;!-- Will produce &#x27;/gtvg/order/details?orderId=3&#x27; (plus rewriting) --&gt; &lt;a href=&quot;details.html&quot; th:href=&quot;@&#123;/order/details(orderId=$&#123;o.id&#125;)&#125;&quot;&gt;view&lt;/a&gt; &lt;!-- Will produce &#x27;/gtvg/order/3/details&#x27; (plus rewriting) --&gt; &lt;a href=&quot;details.html&quot; th:href=&quot;@&#123;/order/&#123;orderId&#125;/details(orderId=$&#123;o.id&#125;)&#125;&quot;&gt;view&lt;/a&gt; ~{…}:文档片段 1&lt;div th:insert=&quot;~&#123;commons :: main&#125;&quot;&gt;...&lt;/div&gt; 三、字面量Literals: 字符串 Text literals: ‘one text’ , ‘Another one!’ ,… 数字 Number literals: 0 , 34 , 3.0 , 12.3 ,… 布尔值 Boolean literals: true , false 空 Null literal: null 文字标记 Literal tokens: one , sometext , main ,… 四、文本操作Text operations: 字符串拼接 String concatenation: + 字符串替换 Literal substitutions: |The name is ${name}| 五、数学运算Arithmetic operations: 简单运算 Binary operators: + , - , * , / , % 负号 Minus sign (unary operator): - 六、布尔运算Boolean operations: 与、或 Binary operators: and , or 非 Boolean negation (unary operator): ! , not 七、比较运算Comparisons and equality: 比较 Comparators: &gt; , &lt; , &gt;= , &lt;= ( gt , lt , ge , le ) 相等判断 Equality operators: == , != ( eq , ne ) 八、条件运算Conditional operators: If-then: (if) ? (then) If-then-else: (if) ? (then) : (else) Default: (value) ?: (defaultvalue) 九、特殊操作Special tokens: 无操作 No-Operation: _","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-10-04T02:26:37.909Z","updated":"2020-10-04T02:26:37.909Z","comments":true,"path":"2020/10/04/hello-world/","link":"","permalink":"http://example.com/2020/10/04/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}